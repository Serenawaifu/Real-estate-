{
  "root": true,
  "env": {
    "browser": true,
    "es2022": true,
    "node": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:@typescript-eslint/strict",
    "plugin:jsx-a11y/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:security/recommended",
    "plugin:tailwindcss/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": ["./tsconfig.json", "./tsconfig.node.json"],
    "tsconfigRootDir": "."
  },
  "plugins": [
    "react",
    "react-refresh",
    "@typescript-eslint",
    "jsx-a11y",
    "import",
    "security",
    "tailwindcss",
    "unicorn",
    "promise",
    "sonarjs",
    "perfectionist"
  ],
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json"
      },
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    },
    "tailwindcss": {
      "callees": ["cn", "clsx", "classnames", "twMerge"],
      "config": "./tailwind.config.js",
      "cssFiles": [
        "**/*.css",
        "!**/node_modules",
        "!**/dist",
        "!**/build"
      ]
    }
  },
  "rules": {
    // React Rules
    "react-refresh/only-export-components": ["warn", { "allowConstantExport": true }],
    "react/prop-types": "off",
    "react/require-default-props": "off",
    "react/jsx-filename-extension": ["error", { "extensions": [".jsx", ".tsx"] }],
    "react/jsx-props-no-spreading": ["error", {
      "html": "ignore",
      "custom": "enforce",
      "exceptions": ["App", "Component"]
    }],
    "react/function-component-definition": ["error", {
      "namedComponents": "arrow-function",
      "unnamedComponents": "arrow-function"
    }],
    "react/jsx-sort-props": ["error", {
      "callbacksLast": true,
      "shorthandFirst": true,
      "shorthandLast": false,
      "ignoreCase": true,
      "noSortAlphabetically": false,
      "reservedFirst": true
    }],
    "react/jsx-max-props-per-line": ["error", {
      "maximum": 1,
      "when": "multiline"
    }],
    "react/jsx-indent-props": ["error", 2],
    "react/jsx-boolean-value": ["error", "never"],
    "react/self-closing-comp": "error",
    "react/jsx-curly-brace-presence": ["error", {
      "props": "never",
      "children": "never"
    }],
    "react/jsx-pascal-case": ["error", {
      "allowAllCaps": false,
      "allowNamespace": false
    }],
    "react/jsx-key": ["error", {
      "checkFragmentShorthand": true,
      "checkKeyMustBeforeSpread": true
    }],
    "react/jsx-no-useless-fragment": ["error", { "allowExpressions": true }],
    "react/jsx-handler-names": ["error", {
      "eventHandlerPrefix": "handle",
      "eventHandlerPropPrefix": "on"
    }],
    "react/hook-use-state": ["error", { "allowDestructuredState": true }],
    
    // React Hooks Rules
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    
    // TypeScript Rules
    "@typescript-eslint/explicit-function-return-type": ["error", {
      "allowExpressions": true,
      "allowTypedFunctionExpressions": true,
      "allowHigherOrderFunctions": true,
      "allowDirectConstAssertionInArrowFunctions": true
    }],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unused-vars": ["error", {
      "argsIgnorePattern": "^_",
      "varsIgnorePattern": "^_",
      "caughtErrorsIgnorePattern": "^_"
    }],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE", "PascalCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"]
      },
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "prefix": ["I"]
      }
    ],
    "@typescript-eslint/consistent-type-imports": ["error", {
      "prefer": "type-imports",
      "disallowTypeAnnotations": true
    }],
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/no-inferrable-types": ["error", {
      "ignoreParameters": true,
      "ignoreProperties": true
    }],
    
    // Import Rules
    "import/order": ["error", {
      "groups": [
        "builtin",
        "external",
        "internal",
        "parent",
        "sibling",
        "index",
        "object",
        "type"
      ],
      "pathGroups": [
        {
          "pattern": "react",
          "group": "external",
          "position": "before"
        },
        {
          "pattern": "@/**",
          "group": "internal",
          "position": "before"
        }
      ],
      "pathGroupsExcludedImportTypes": ["react"],
      "newlines-between": "always",
      "alphabetize": {
        "order": "asc",
        "caseInsensitive": true
      }
    }],
    "import/no-duplicates": "error",
    "import/no-cycle": "error",
    "import/no-self-import": "error",
    "import/no-useless-path-segments": "error",
    "import/no-relative-packages": "error",
    "import/newline-after-import": "error",
    "import/first": "error",
    "import/exports-last": "error",
    "import/no-anonymous-default-export": ["error", {
      "allowArray": false,
      "allowArrowFunction": false,
      "allowAnonymousClass": false,
      "allowAnonymousFunction": false,
      "allowCallExpression": true,
      "allowLiteral": false,
      "allowObject": false
    }],
    
    // Security Rules
    "security/detect-object-injection": "off",
    "security/detect-non-literal-regexp": "warn",
    "security/detect-unsafe-regex": "error",
    
    // Unicorn Rules
    "unicorn/filename-case": ["error", {
      "cases": {
        "camelCase": true,
        "pascalCase": true,
        "kebabCase": true
      }
    }],
    "unicorn/no-array-for-each": "error",
    "unicorn/no-array-reduce": "warn",
    "unicorn/prefer-array-find": "error",
    "unicorn/prefer-array-some": "error",
    "unicorn/prefer-includes": "error",
    "unicorn/prefer-string-starts-ends-with": "error",
    "unicorn/prefer-switch": "error",
    "unicorn/prefer-ternary": "error",
    "unicorn/prevent-abbreviations": ["error", {
      "replacements": {
        "props": false,
        "ref": false,
        "params": false
      }
    }],
    
    // Promise Rules
    "promise/always-return": "error",
    "promise/catch-or-return": "error",
    "promise/no-nesting": "error",
    "promise/no-promise-in-callback": "error",
    "promise/no-callback-in-promise": "error",
    "promise/no-return-in-finally": "error",
    "promise/valid-params": "error",
    
    // SonarJS Rules
    "sonarjs/cognitive-complexity": ["error", 15],
    "sonarjs/no-duplicate-string": ["error", 5],
    "sonarjs/no-identical-functions": "error",
    "sonarjs/no-redundant-boolean": "error",
    "sonarjs/no-unused-collection": "error",
    "sonarjs/no-useless-catch": "error",
    "sonarjs/prefer-immediate-return": "error",
    
    // Perfectionist Rules
    "perfectionist/sort-objects": ["error", {
      "type": "natural",
      "order": "asc"
    }],
    "perfectionist/sort-imports": "off", // Using import/order instead
    "perfectionist/sort-named-imports": ["error", {
      "type": "natural",
      "order": "asc"
    }],
    "perfectionist/sort-named-exports": ["error", {
      "type": "natural",
      "order": "asc"
    }],
    "perfectionist/sort-jsx-props": "off", // Using react/jsx-sort-props instead
    
    // General JavaScript Rules
    "no-console": ["warn", {
      "allow": ["warn", "error", "info", "table"]
    }],
    "no-debugger": "error",
    "no-alert": "error",
    "no-var": "error",
    "prefer-const": "error",
    "prefer-template": "error",
    "object-shorthand": "error",
    "no-nested-ternary": "error",
    "no-unneeded-ternary": "error",
    "spaced-comment": ["error", "always", {
      "line": {
        "markers": ["/"],
        "exceptions": ["-", "+", "*"]
      },
      "block": {
        "markers": ["!"],
        "exceptions": ["*"],
        "balanced": true
      }
    }],
    "prefer-destructuring": ["error", {
      "array": true,
      "object": true
    }],
    "no-unused-expressions": ["error", {
      "allowShortCircuit": true,
      "allowTernary": true,
      "allowTaggedTemplates": true
    }],
    "no-param-reassign": ["error", {
      "props": true,
      "ignorePropertyModificationsFor": ["state", "acc", "accumulator"]
    }],
    "arrow-body-style": ["error", "as-needed"],
    "prefer-arrow-callback": ["error", {
      "allowNamedFunctions": false,
      "allowUnboundThis": true
    }],
    "max-lines": ["error", {
      "max": 500,
      "skipBlankLines": true,
      "skipComments": true
    }],
    "max-lines-per-function": ["error", {
      "max": 150,
      "skipBlankLines": true,
      "skipComments": true,
      "IIFEs": true
    }],
    "complexity": ["error", 20],
    "max-depth": ["error", 4],
    "max-nested-callbacks": ["error", 3],
    "max-params": ["error", 4],
    
    // Tailwind CSS Rules
    "tailwindcss/no-custom-classname": "off",
    "tailwindcss/classnames-order": "error",
    "tailwindcss/enforces-negative-arbitrary-values": "error",
    "tailwindcss/enforces-shorthand": "error",
    "tailwindcss/no-arbitrary-value": "off",
    "tailwindcss/no-contradicting-classname": "error"
  },
  "overrides": [
    {
      "files": ["*.js"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off"
      }
    },
    {
      "files": ["*.test.ts", "*.test.tsx", "*.spec.ts", "*.spec.tsx"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "max-lines-per-function": "off",
        "max-lines": "off"
      }
    },
    {
      "files": ["vite.config.ts", "tailwind.config.js", "postcss.config.js"],
      "rules": {
        "import/no-extraneous-dependencies": "off"
      }
    }
  ],
  "ignorePatterns": [
    "dist",
    "build",
    "node_modules",
    "coverage",
    "*.min.js",
    "*.config.js",
    "*.config.ts",
    "public",
    ".cache",
    ".next",
    ".vercel",
    "*.d.ts"
  ]
}

    
